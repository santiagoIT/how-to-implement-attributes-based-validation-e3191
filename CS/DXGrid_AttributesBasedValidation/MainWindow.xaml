<Window x:Class="DXGrid_AttributesBasedValidation.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="350" Width="525" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        xmlns:dxGridAttributesBasedValidation="clr-namespace:DXGrid_AttributesBasedValidation">

  <Window.Resources>
    <dxGridAttributesBasedValidation:UnitConverter x:Key="UnitConverter"/>
  </Window.Resources>
  <Grid>
    <dxg:GridControl Name="grid" >
      <dxg:GridControl.Columns>
        <dxg:GridColumn FieldName="Name" />
        <dxg:GridColumn FieldName="Position" />
        <dxg:GridColumn FieldName="Department" />

        <!-- Display Value2 - using FieldName. Attributes work. Great!
        But how can I use a Converter? 
        I know I could add a new Property to the ViewModel to accomplish this,
        But it would mean adding a lot of properties.... This is something that can be avoided with a converter.
        -->
        <dxg:GridColumn FieldName="Value2" Header="Raw-Value"/>

        <dxg:GridColumn Binding="{Binding Value1, Mode=TwoWay,  Converter={StaticResource UnitConverter}}" />
        <dxg:GridColumn Binding="{Binding Value2, Mode=TwoWay, Converter={StaticResource UnitConverter}}" Header="Converted Value" />
      </dxg:GridControl.Columns>
      <dxg:GridControl.View>
        <dxg:TableView Name="tableView1" AutoWidth="True"
                               ShowValidationAttributeErrors="True"
                               AllowCommitOnValidationAttributeError="False"
                               />
      </dxg:GridControl.View>
    </dxg:GridControl>
  </Grid>
</Window>
